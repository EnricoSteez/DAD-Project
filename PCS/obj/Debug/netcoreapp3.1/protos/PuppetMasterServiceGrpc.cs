// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/PuppetMasterService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Server.protos {
  public static partial class PuppetMasterServices
  {
    static readonly string __ServiceName = "PuppetMasterServices";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Server.protos.ServerRequestObject> __Marshaller_ServerRequestObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.ServerRequestObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.ServerResponseObject> __Marshaller_ServerResponseObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.ServerResponseObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.PartitionRequestObject> __Marshaller_PartitionRequestObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.PartitionRequestObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.PartitionResponseObject> __Marshaller_PartitionResponseObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.PartitionResponseObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.StatusRequestObject> __Marshaller_StatusRequestObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.StatusRequestObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.StatusResponseObject> __Marshaller_StatusResponseObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.StatusResponseObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.ClientRequestObject> __Marshaller_ClientRequestObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.ClientRequestObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.ClientResponseObject> __Marshaller_ClientResponseObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.ClientResponseObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.CrashRequestObject> __Marshaller_CrashRequestObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.CrashRequestObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.CrashResponseObject> __Marshaller_CrashResponseObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.CrashResponseObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.FreezeRequestObject> __Marshaller_FreezeRequestObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.FreezeRequestObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.FreezeResponseObject> __Marshaller_FreezeResponseObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.FreezeResponseObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.UnfreezeRequestObject> __Marshaller_UnfreezeRequestObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.UnfreezeRequestObject.Parser));
    static readonly grpc::Marshaller<global::Server.protos.UnfreezeResponseObject> __Marshaller_UnfreezeResponseObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.protos.UnfreezeResponseObject.Parser));

    static readonly grpc::Method<global::Server.protos.ServerRequestObject, global::Server.protos.ServerResponseObject> __Method_ServerRequest = new grpc::Method<global::Server.protos.ServerRequestObject, global::Server.protos.ServerResponseObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ServerRequest",
        __Marshaller_ServerRequestObject,
        __Marshaller_ServerResponseObject);

    static readonly grpc::Method<global::Server.protos.PartitionRequestObject, global::Server.protos.PartitionResponseObject> __Method_PartitionRequest = new grpc::Method<global::Server.protos.PartitionRequestObject, global::Server.protos.PartitionResponseObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PartitionRequest",
        __Marshaller_PartitionRequestObject,
        __Marshaller_PartitionResponseObject);

    static readonly grpc::Method<global::Server.protos.StatusRequestObject, global::Server.protos.StatusResponseObject> __Method_StatusRequest = new grpc::Method<global::Server.protos.StatusRequestObject, global::Server.protos.StatusResponseObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StatusRequest",
        __Marshaller_StatusRequestObject,
        __Marshaller_StatusResponseObject);

    static readonly grpc::Method<global::Server.protos.ClientRequestObject, global::Server.protos.ClientResponseObject> __Method_ClientRequest = new grpc::Method<global::Server.protos.ClientRequestObject, global::Server.protos.ClientResponseObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClientRequest",
        __Marshaller_ClientRequestObject,
        __Marshaller_ClientResponseObject);

    static readonly grpc::Method<global::Server.protos.CrashRequestObject, global::Server.protos.CrashResponseObject> __Method_CrashRequest = new grpc::Method<global::Server.protos.CrashRequestObject, global::Server.protos.CrashResponseObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CrashRequest",
        __Marshaller_CrashRequestObject,
        __Marshaller_CrashResponseObject);

    static readonly grpc::Method<global::Server.protos.FreezeRequestObject, global::Server.protos.FreezeResponseObject> __Method_FreezeRequest = new grpc::Method<global::Server.protos.FreezeRequestObject, global::Server.protos.FreezeResponseObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FreezeRequest",
        __Marshaller_FreezeRequestObject,
        __Marshaller_FreezeResponseObject);

    static readonly grpc::Method<global::Server.protos.UnfreezeRequestObject, global::Server.protos.UnfreezeResponseObject> __Method_UnfreezeRequest = new grpc::Method<global::Server.protos.UnfreezeRequestObject, global::Server.protos.UnfreezeResponseObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnfreezeRequest",
        __Marshaller_UnfreezeRequestObject,
        __Marshaller_UnfreezeResponseObject);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Server.protos.PuppetMasterServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PuppetMasterServices</summary>
    [grpc::BindServiceMethod(typeof(PuppetMasterServices), "BindService")]
    public abstract partial class PuppetMasterServicesBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Server.protos.ServerResponseObject> ServerRequest(global::Server.protos.ServerRequestObject request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Server.protos.PartitionResponseObject> PartitionRequest(global::Server.protos.PartitionRequestObject request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Server.protos.StatusResponseObject> StatusRequest(global::Server.protos.StatusRequestObject request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Server.protos.ClientResponseObject> ClientRequest(global::Server.protos.ClientRequestObject request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Server.protos.CrashResponseObject> CrashRequest(global::Server.protos.CrashRequestObject request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Server.protos.FreezeResponseObject> FreezeRequest(global::Server.protos.FreezeRequestObject request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Server.protos.UnfreezeResponseObject> UnfreezeRequest(global::Server.protos.UnfreezeRequestObject request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PuppetMasterServicesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ServerRequest, serviceImpl.ServerRequest)
          .AddMethod(__Method_PartitionRequest, serviceImpl.PartitionRequest)
          .AddMethod(__Method_StatusRequest, serviceImpl.StatusRequest)
          .AddMethod(__Method_ClientRequest, serviceImpl.ClientRequest)
          .AddMethod(__Method_CrashRequest, serviceImpl.CrashRequest)
          .AddMethod(__Method_FreezeRequest, serviceImpl.FreezeRequest)
          .AddMethod(__Method_UnfreezeRequest, serviceImpl.UnfreezeRequest).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PuppetMasterServicesBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ServerRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.protos.ServerRequestObject, global::Server.protos.ServerResponseObject>(serviceImpl.ServerRequest));
      serviceBinder.AddMethod(__Method_PartitionRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.protos.PartitionRequestObject, global::Server.protos.PartitionResponseObject>(serviceImpl.PartitionRequest));
      serviceBinder.AddMethod(__Method_StatusRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.protos.StatusRequestObject, global::Server.protos.StatusResponseObject>(serviceImpl.StatusRequest));
      serviceBinder.AddMethod(__Method_ClientRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.protos.ClientRequestObject, global::Server.protos.ClientResponseObject>(serviceImpl.ClientRequest));
      serviceBinder.AddMethod(__Method_CrashRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.protos.CrashRequestObject, global::Server.protos.CrashResponseObject>(serviceImpl.CrashRequest));
      serviceBinder.AddMethod(__Method_FreezeRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.protos.FreezeRequestObject, global::Server.protos.FreezeResponseObject>(serviceImpl.FreezeRequest));
      serviceBinder.AddMethod(__Method_UnfreezeRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.protos.UnfreezeRequestObject, global::Server.protos.UnfreezeResponseObject>(serviceImpl.UnfreezeRequest));
    }

  }
}
#endregion
